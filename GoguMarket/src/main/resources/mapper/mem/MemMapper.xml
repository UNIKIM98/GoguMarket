<?xml version="1.0" encoding="UTF-8"?>
	<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goguma.mem.mapper.MemMapper">

	<sql id="creiteria">
		<where>
			<if test="userStts != null and userStts != ''">
				user_stts = #{userStts}
			</if>

			<if test="userSe != null and userSe != ''">
				AND user_se = #{userSe}
			</if>

			<if test="searchKey =='EM'">eml LIKE '%'||#{search}||'%'</if>
			<if test="searchKey =='ID'">user_Id LIKE '%'||#{search}||'%'</if>
			<if test="searchKey =='NK'">nick_Nm LIKE '%'||#{search}||'%'</if>
			<if test="searchKey =='NM'">user_Nm LIKE '%'||#{search}||'%'</if>
			<if test="searchKey =='PH'">mbl_Telno LIKE '%'||#{search}||'%'</if>
			<if test="search != null and search !=''">
				eml LIKE '%'||#{search}||'%'
				OR user_Id LIKE '%'||#{search}||'%'
				OR nick_Nm LIKE '%'||#{search}||'%'
				OR user_Nm LIKE '%'||#{search}||'%'
				OR mbl_Telno LIKE '%'||#{search}||'%'
			</if>
		</where>
	</sql>

	<!-- ❤️ 회원가입 -->
	<insert id="memberJoin" parameterType="com.goguma.mem.vo.MemVO">
		INSERT INTO MEM (USER_ID,
		USER_SE, USER_PW, USER_NM,
		NICK_NM, ADDR, DEAL_AREA, MBL_TELNO,
		JOIN_YMD, USER_STTS, EML)
		VALUES(#{userId}, #{userSe},#{userPw}, #{userNm},
		#{nickNm}, #{addr}, #{dealArea}, #{mblTelno}, SYSDATE, #{userStts},
		#{eml})
	</insert>



	<!-- ❤️ 아이디 중복 확인 -->
	<select id="isIdCheck" resultType="int" parameterType="String">
		SELECT
		COUNT(USER_ID)
		FROM MEM
		WHERE USER_ID = #{userId}
	</select>

	<!-- ❤️ 이메일 중복 확인 -->
	<select id="isEmlCheck" resultType="int" parameterType="String">
		SELECT
		COUNT(EML)
		FROM MEM
		WHERE EML = #{eml}
	</select>

	<!-- ❤️ 닉네임 중복 확인 -->
	<select id="isNickNmCheck" resultType="int"
		parameterType="String">
		SELECT COUNT(NICK_NM)
		FROM MEM
		WHERE NICK_NM = #{nickNm}
	</select>

	<!-- ❤️ 유저 한 명 정보 전체 조회 -->
	<select id="selectUser" parameterType="com.goguma.mem.vo.MemVO"
		resultType="com.goguma.mem.vo.MemVO">
		SELECT USER_ID, 'ROLE_'||USER_SE as USER_SE, USER_PW as USER_PW,
		USER_NM,
		GENDER, NICK_NM, ADDR, DEAL_AREA, EML, BRTH_YMD, MBL_TELNO, ACT_NO,
		RCMD_CODE, JOIN_YMD, USER_STTS, SOCIAL_TOKEN,
		RFSH_TOKEN, SOCIAL_SE,
		ATCH_NM, ATCH_PATH
		FROM MEM
		<if test="eml != null and eml != ''">WHERE EML = #{eml}</if>
		<if test="userId != null and userId != ''">WHERE user_id=#{userId}</if>
	</select>

	<!-- ▶ 관리자 멤버 전체 조회/구분 기능 가능 -->
	<select id="selectMemberList"
		parameterType="com.goguma.mem.vo.MemVO"
		resultType="com.goguma.mem.vo.MemVO">
		select *
		from (select rownum rn,a.* from(
		SELECT * FROM mem

		<include refid="creiteria"></include>
		order by join_ymd,user_Stts
		
		<![CDATA[
		) a where rownum <= #{last} )b where rn >= #{first}
		]]>
	</select>

	<!-- ▶ 관리자 멤버 상태 변경 -->
	<update id="updateStts" parameterType="com.goguma.mem.vo.MemVO">
		UPDATE mem SET user_stts =
		#{userStts}
		WHERE user_id = #{userId}
	</update>

	<!-- ▶ 관리자 멤버 제명(delete) -->
	<delete id="deleteMember"
		parameterType="com.goguma.mem.vo.MemVO">
		DELETE FROM mem WHERE user_id = #{userId}
	</delete>


	<!-- ▶ 관리자 멤버 제명(delete) -->
	<select id="getcountTotal" resultType="int">
		SELECT COUNT(*)
		FROM mem
		<include refid="creiteria"></include>
	</select>

	<!-- ❤️ 우리동네 수정(회원 주소도 같이 변경됨) -->
	<update id="updateDealArea"
		parameterType="com.goguma.mem.vo.MemVO">
		UPDATE MEM
		SET DEAL_AREA = #{dealArea}, ADDR = #{addr}
		WHERE USER_ID = #{userId}
	</update>

	<!-- ❤️ 회원정보 수정 -->
	<update id="updateUser" parameterType="com.goguma.mem.vo.MemVO">
		UPDATE MEM
		SET
		user_pw = #{userPw}
		<if test="nickNm != null and nickNm != ''">,nick_Nm = #{nickNm}</if>
		<if test="addr != null and addr != ''">,addr = #{addr}</if>
		<if test="dealArea != null and dealArea != ''">,deal_area = #{dealArea}</if>
		<if test="eml != null and eml != ''">,eml = #{eml}</if>
		<if test="birthYmd != null and birthYmd != ''">,birth_ymd =#{birthYmd}</if>
		<if test="birthYmd != null and birthYmd != ''">,mbl_telNo = #{mblTelno}</if>
		<choose>
			<when test="atchNm == null">,atch_nm = null</when>
			<otherwise>,atch_nm = #{atchNm}</otherwise>
		</choose>
		<choose>
			<when test="atchPath == null">,atch_path = null</when>
			<otherwise>,atch_path = #{atchPath}</otherwise>
		</choose>
		WHERE user_id = #{userId}
	</update>

	<!-- ❤️ 비밀번호 수정 -->
	<update id="updateUserPw">
		UPDATE MEM
		SET user_pw = #{userPw}
		WHERE user_id =
		#{userId}
	</update>
	
		<!-- ❤️ 권한변경 -->
	<update id="updateUserSe" parameterType="com.goguma.mem.vo.MemVO">
		UPDATE MEM
		SET user_se = #{userSe}
		WHERE user_id =
		#{userId}
	</update>
</mapper>